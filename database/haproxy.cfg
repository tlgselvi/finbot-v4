# HAProxy Configuration for PostgreSQL Read Replicas
# FinBot v4 - Load Balancing for Read Queries

global
    daemon
    maxconn 4096
    log stdout local0
    stats socket /var/run/haproxy.sock mode 600 level admin
    stats timeout 2m

defaults
    mode tcp
    timeout connect 5s
    timeout client 30s
    timeout server 30s
    option tcplog
    log global
    retries 3

# Statistics interface
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats show-legends
    stats show-desc "FinBot v4 Database Load Balancer"

# PostgreSQL Read Replica Load Balancer
listen postgres-read
    bind *:5432
    mode tcp
    balance roundrobin
    option tcp-check
    
    # Health check query
    tcp-check send-binary 00000020000000030000757365720000706f737467726573000000
    tcp-check expect binary 520000000800000000
    
    # Read replicas
    server replica-1 postgres-replica-1:5432 check inter 5s rise 2 fall 3 weight 100
    server replica-2 postgres-replica-2:5432 check inter 5s rise 2 fall 3 weight 80
    
    # Backup to master if all replicas fail
    server master postgres-master:5432 check inter 10s rise 2 fall 5 weight 1 backup

# PostgreSQL Master (for write queries)
listen postgres-write
    bind *:5431
    mode tcp
    balance first
    option tcp-check
    
    # Health check
    tcp-check send-binary 00000020000000030000757365720000706f737467726573000000
    tcp-check expect binary 520000000800000000
    
    # Master only
    server master postgres-master:5432 check inter 5s rise 2 fall 3

# Frontend for application routing
frontend postgres-frontend
    bind *:5430
    mode tcp
    
    # Route based on application name or user
    # This is a simplified example - in practice, you'd need more sophisticated routing
    default_backend postgres-read-backend

backend postgres-read-backend
    mode tcp
    balance roundrobin
    option tcp-check
    
    # Health check
    tcp-check send-binary 00000020000000030000757365720000706f737467726573000000
    tcp-check expect binary 520000000800000000
    
    server replica-1 postgres-replica-1:5432 check inter 5s
    server replica-2 postgres-replica-2:5432 check inter 5s
    server master postgres-master:5432 check inter 10s backup

backend postgres-write-backend
    mode tcp
    balance first
    option tcp-check
    
    # Health check
    tcp-check send-binary 00000020000000030000757365720000706f737467726573000000
    tcp-check expect binary 520000000800000000
    
    server master postgres-master:5432 check inter 5s