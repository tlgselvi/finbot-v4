version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=finbot
      - POSTGRES_USER=finbot
      - POSTGRES_PASSWORD=finbot123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped

  # Backend API (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://finbot:finbot123@postgres:5432/finbot
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped

  # ML Service (Development)
  ml-service:
    build:
      context: ./ml-pipeline
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://finbot:finbot123@postgres:5432/finbot
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./ml-pipeline:/app
    restart: unless-stopped

  # Frontend Web App (Development)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - NEXT_PUBLIC_ML_API_URL=http://ml-service:8080
    depends_on:
      - backend
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data: