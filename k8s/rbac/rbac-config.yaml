# FinBot v4 - RBAC Configuration
# Role-Based Access Control for service accounts and users

---
# Production Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: finbot-production
  namespace: production
  labels:
    app: finbot
    environment: production
automountServiceAccountToken: true

---
# Staging Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: finbot-staging
  namespace: staging
  labels:
    app: finbot
    environment: staging
automountServiceAccountToken: true

---
# Database Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: finbot-database
  namespace: database
  labels:
    app: finbot
    component: database
automountServiceAccountToken: true

---
# Cache Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: finbot-cache
  namespace: cache
  labels:
    app: finbot
    component: cache
automountServiceAccountToken: true

---
# Monitoring Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: finbot-monitoring
  namespace: monitoring
  labels:
    app: finbot
    component: monitoring
automountServiceAccountToken: true

---
# Production Application Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: production
  name: finbot-app-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

---
# Production Application RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: finbot-app-binding
  namespace: production
subjects:
- kind: ServiceAccount
  name: finbot-production
  namespace: production
roleRef:
  kind: Role
  name: finbot-app-role
  apiGroup: rbac.authorization.k8s.io

---
# Database Management Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: database
  name: finbot-database-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["statefulsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

---
# Database Management RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: finbot-database-binding
  namespace: database
subjects:
- kind: ServiceAccount
  name: finbot-database
  namespace: database
roleRef:
  kind: Role
  name: finbot-database-role
  apiGroup: rbac.authorization.k8s.io

---
# Cache Management Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: cache
  name: finbot-cache-role
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["statefulsets", "deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]

---
# Cache Management RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: finbot-cache-binding
  namespace: cache
subjects:
- kind: ServiceAccount
  name: finbot-cache
  namespace: cache
roleRef:
  kind: Role
  name: finbot-cache-role
  apiGroup: rbac.authorization.k8s.io

---
# Monitoring Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: finbot-monitoring-role
rules:
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "services", "endpoints", "pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
# Monitoring ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: finbot-monitoring-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: finbot-monitoring-role
subjects:
- kind: ServiceAccount
  name: finbot-monitoring
  namespace: monitoring

---
# DevOps Admin Role (for CI/CD)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: finbot-devops-admin
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["extensions"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["policy"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["*"]
  verbs: ["*"]

---
# Developer Role (read-only access)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: finbot-developer
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]

---
# SRE Role (monitoring and troubleshooting)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: finbot-sre
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["*"]
  verbs: ["get", "list", "watch", "patch", "update"]
- apiGroups: [""]
  resources: ["pods/exec", "pods/log"]
  verbs: ["create", "get", "list"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list"]

---
# Security Auditor Role (read-only security access)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: finbot-security-auditor
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies", "poddisruptionbudgets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]

---
# Pod Security Policy for Production
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: finbot-production-psp
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    rule: 'MustRunAsNonRoot'
  seLinux:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
  seccompProfile:
    type: 'RuntimeDefault'

---
# Pod Security Policy Role
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: finbot-psp-role
  namespace: production
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - finbot-production-psp

---
# Pod Security Policy RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: finbot-psp-binding
  namespace: production
roleRef:
  kind: Role
  name: finbot-psp-role
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: finbot-production
  namespace: production