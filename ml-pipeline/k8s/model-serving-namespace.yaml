apiVersion: v1
kind: Namespace
metadata:
  name: ml-serving
  labels:
    name: ml-serving
    istio-injection: enabled
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-storage-pvc
  namespace: ml-serving
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: model-serving-config
  namespace: ml-serving
data:
  tensorflow_serving.conf: |
    model_config_list {
      config {
        name: 'budget_optimizer'
        base_path: '/models/budget_optimizer'
        model_platform: 'tensorflow'
        model_version_policy {
          latest {
            num_versions: 2
          }
        }
      }
      config {
        name: 'risk_assessor'
        base_path: '/models/risk_assessor'
        model_platform: 'tensorflow'
        model_version_policy {
          latest {
            num_versions: 2
          }
        }
      }
      config {
        name: 'anomaly_detector'
        base_path: '/models/anomaly_detector'
        model_platform: 'tensorflow'
        model_version_policy {
          latest {
            num_versions: 2
          }
        }
      }
    }
  
  monitoring.yaml: |
    global:
      scrape_interval: 15s
    scrape_configs:
    - job_name: 'tensorflow-serving'
      static_configs:
      - targets: ['tensorflow-serving-service:8501']
      metrics_path: '/monitoring/prometheus/metrics'
    - job_name: 'seldon-core'
      static_configs:
      - targets: ['finbot-ml-models:8000']
      metrics_path: '/prometheus'
---
apiVersion: v1
kind: Secret
metadata:
  name: model-registry-secret
  namespace: ml-serving
type: Opaque
data:
  # Base64 encoded credentials
  registry_username: bW9kZWxfcmVnaXN0cnk=  # model_registry
  registry_password: c2VjdXJlX3Bhc3N3b3Jk  # secure_password
  gcs_service_account: ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiZmluYm90LW1sIgp9  # GCS service account JSON
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: ml-serving
  name: model-serving-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["machinelearning.seldon.io"]
  resources: ["seldondeployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: model-serving-rolebinding
  namespace: ml-serving
subjects:
- kind: ServiceAccount
  name: model-serving-sa
  namespace: ml-serving
roleRef:
  kind: Role
  name: model-serving-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: model-serving-sa
  namespace: ml-serving