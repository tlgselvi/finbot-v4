apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ml-model-storage
  namespace: finbot-ml
  labels:
    component: ml-storage
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: finbot-ml
  labels:
    component: monitoring-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: finbot-ml
  labels:
    component: monitoring-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: v1
kind: Secret
metadata:
  name: ml-pipeline-secrets
  namespace: finbot-ml
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  database-url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc3dvcmRAcG9zdGdyZXM6NTQzMi9tbF9kYXRhYmFzZQ==
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzk=
  api-key: eW91ci1hcGkta2V5LWhlcmU=
  jwt-secret: eW91ci1qd3Qtc2VjcmV0LWhlcmU=
---
apiVersion: v1
kind: Secret
metadata:
  name: ml-analytics-secrets
  namespace: finbot-ml
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  database-url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc3dvcmRAcG9zdGdyZXM6NTQzMi9tbF9kYXRhYmFzZQ==
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzk=
  encryption-key: eW91ci1lbmNyeXB0aW9uLWtleS1oZXJl
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secrets
  namespace: finbot-ml
type: Opaque
data:
  # Base64 encoded admin password - replace with actual value
  admin-password: YWRtaW4xMjM=
---
apiVersion: v1
kind: Secret
metadata:
  name: ml-analytics-tls
  namespace: finbot-ml
type: kubernetes.io/tls
data:
  # Base64 encoded TLS certificate and key - replace with actual values
  tls.crt: LS0tLS1CRUdJTi...
  tls.key: LS0tLS1CRUdJTi...
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ml-analytics-config
  namespace: finbot-ml
data:
  app.yaml: |
    server:
      port: 8080
      host: "0.0.0.0"
      
    database:
      pool_size: 20
      max_overflow: 30
      pool_timeout: 30
      
    redis:
      pool_size: 10
      timeout: 5
      
    ml_models:
      anomaly_detection:
        model_path: "/models/anomaly-detection"
        batch_size: 32
        timeout: 30
      risk_assessment:
        model_path: "/models/risk-assessment"
        batch_size: 16
        timeout: 60
      budget_optimization:
        model_path: "/models/budget-optimization"
        batch_size: 8
        timeout: 120
        
    monitoring:
      metrics_port: 9090
      health_check_interval: 30
      
    logging:
      level: "INFO"
      format: "json"
      
    security:
      rate_limit:
        requests_per_minute: 1000
        burst_size: 100
      cors:
        allowed_origins: ["https://app.finbot.com"]
        allowed_methods: ["GET", "POST", "PUT", "DELETE"]
        allowed_headers: ["Content-Type", "Authorization"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: model-registry-config
  namespace: finbot-ml
data:
  registry.yaml: |
    registry:
      backend: "s3"
      s3:
        bucket: "finbot-ml-models"
        region: "us-west-2"
        
    models:
      retention_policy: "30d"
      versioning: true
      
    metadata:
      tracking_uri: "http://mlflow-service:5000"
      
    deployment:
      auto_deploy: false
      validation_required: true
      
    monitoring:
      drift_detection: true
      performance_tracking: true
      alert_thresholds:
        accuracy_drop: 0.05
        latency_increase: 2.0