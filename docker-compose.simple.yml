services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_DB=finbot
      - POSTGRES_USER=finbot
      - POSTGRES_PASSWORD=finbot123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finbot -d finbot"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (Basit)
  backend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://finbot:finbot123@postgres:5432/finbot
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: sh -c "npm install && npm run dev"
    restart: unless-stopped

  # ML Service (Basit)
  ml-service:
    image: python:3.9-slim
    working_dir: /app
    ports:
      - "8080:8080"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://finbot:finbot123@postgres:5432/finbot
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./ml-pipeline:/app
    command: sh -c "pip install fastapi uvicorn && python app.py"
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data: